

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
/* Header for class com_liangbin_jni_beautify_JniBeautify */

#ifndef _Included_com_liangbin_jni_beautify_JniBeautify
#define _Included_com_liangbin_jni_beautify_JniBeautify
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_liangbin_jni_beautify_JniBeautify
 * Method:    getBitmap
 * Signature: ([I)[I
 */
JNIEXPORT jintArray JNICALL Java_com_liangbin_jni_1beautify_JniBeautify_getBitmap
  (JNIEnv *env, jclass clazz, jintArray jarray,jint width, jint height){

	jintArray arr = env->NewIntArray(width*height);
	int *pixels = env->GetIntArrayElements(jarray, JNI_FALSE);

	int x = 0, y = 0;
	int size = sizeof(pixels) / sizeof(pixels[0]);
	for (x = 0; x < size; x++) {
		int pix = pixels[x];
		int a = pix >> 24;
		int r = (pix >> 16) & 0xff;
		int g = (pix >> 8) & 0xff;
		int b = (pix) & 0xff;
		int new_pix = (a << 24) | (r << 16) | (g << 8) | b;
		pixels[x] = new_pix;
	}

	env->SetIntArrayRegion(arr,0,size,pixels);
	env->ReleaseIntArrayElements(jarray,pixels,0);

	return arr;
}

#ifdef __cplusplus
}
#endif
#endif
